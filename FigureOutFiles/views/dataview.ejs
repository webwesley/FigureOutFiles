
<!-- Styles -->
<style>
#chartdiv {
  width: 100%;
  height: 500px;
}

.amcharts-export-menu-top-right {
  top: 10px;
  right: 0;
}
</style>

<!-- Resources -->
<script src="https://www.amcharts.com/lib/3/amcharts.js"></script>
<script src="https://www.amcharts.com/lib/3/serial.js"></script>
<script src="https://www.amcharts.com/lib/3/plugins/export/export.min.js"></script>
<link rel="stylesheet" href="https://www.amcharts.com/lib/3/plugins/export/export.css" type="text/css" media="all" />
<script src="https://www.amcharts.com/lib/3/themes/light.js"></script>

	<% var xAxis = 'Avg Pace' %>
  	<% var yAxis = 'Elev Gain' %>
  	<% var chartData = '[' %>
  	<% var tmp = '' %>
  	<% runningData.data.forEach(function(item) { %>
  		<% chartData += ('{ "' +  xAxis +  '" : "' +  item[xAxis] +  '" , "' +  yAxis +  '" : "' +  item[yAxis] +  '"},') %>	
  		<% }); %>
  		<% chartData = (chartData.substring(0, chartData.length-1) + ']') %>


<!-- Chart code -->
<% include templates/headers.ejs %>




<script>
var decodeEntities = (function() {
  // this prevents any overhead from creating the object each time
  var element = document.createElement('div');

  function decodeHTMLEntities (str) {
    if(str && typeof str === 'string') {
      // strip script/html tags
      str = str.replace(/<script[^>]*>([\S\s]*?)<\/script>/gmi, '');
      str = str.replace(/<\/?\w(?:[^"'>]|"[^"]*"|'[^']*')*>/gmi, '');
      element.innerHTML = str;
      str = element.textContent;
      element.textContent = '';
    }

    return str;
  }

  return decodeHTMLEntities;
})();
</script>
<script>

function convertToMPM(chartData) {
if(('<%=xAxis%>' == 'Avg Pace') || ('<%=xAxis%>' == 'Best Pace')) {
chartData.forEach(function(item) {
	if(item['<%=xAxis%>'].indexOf('.') != '-1') {
		item['<%=xAxis%>'] = (60 * Math.pow(item['<%=xAxis%>'], -1));
		var tmp = item['<%=xAxis%>']
		for(var tmp = item['<%=xAxis%>']; tmp > 1; tmp--){}
		tmp = Math.round(60 * tmp);
		console.log(tmp);
		var str = (JSON.stringify(item['<%=xAxis%>']));
		var index = str.indexOf('.');
		str = str.substring(0, index);
		console.log(str);
		if(tmp < 10) {
			item['<%=xAxis%>'] = str + ':0' + tmp;
		} else {
			item['<%=xAxis%>'] = str + ':' + tmp;
		}
		console.log(item['<%=xAxis%>']);
		}
	});
} if(('<%=yAxis%>' == 'Avg Pace') || ('<%=yAxis%>' == 'Best Pace')) {
	chartData.forEach(function(item) {
	if(item['<%=yAxis%>'].indexOf('.') != '-1') {
		item['<%=yAxis%>'] = (60 * Math.pow(item['<%=yAxis%>'], -1));
		var tmp = item['<%=yAxis%>']
		for(var tmp = item['<%=yAxis%>']; tmp > 1; tmp--){}
		tmp = Math.round(60 * tmp);
		console.log(tmp);
		var str = (JSON.stringify(item['<%=yAxis%>']));
		var index = str.indexOf('.');
		str = str.substring(0, index);
		console.log(str);
		if(tmp < 10) {
			item['<%=yAxis%>'] = str + ':0' + tmp;
		} else {
			item['<%=yAxis%>'] = str + ':' + tmp;
		}
		console.log(item['<%=yAxis%>']);
		console.log('completed');
		}
	});
}
}

	
</script>


<script>


window.onload = function() {
var chartData = JSON.parse(decodeEntities('<%=chartData %>'));


convertToMPM(chartData);

console.log(chartData);
console.log('Started');
   		
var chart = AmCharts.makeChart("chartdiv", {
  "type": "serial",
  "theme": "light",
  "marginRight": 70,
  "dataProvider": chartData,
  "valueAxes": [{
    "axisAlpha": 0,
    "position": "left",
    "title": "<%=yAxis%>"
  }],
  "startDuration": 1,
  "graphs": [{
    "balloonText": "<b>[[category]]: [[value]]</b>",
    "fillColorsField": "color",
    "fillAlphas": 0.9,
    "lineAlpha": 0.2,
    "type": "column",
    "valueField": "<%=yAxis%>"
  }],
  
  "chartCursor": {
    "categoryBalloonEnabled": false,
    "cursorAlpha": 0,
    "zoomable": false
  },
  "categoryField": "<%=xAxis%>",
  "categoryAxis": {
    "gridPosition": "start",
    "labelRotation": 45
  },
  "export": {
    "enabled": true
  }

});

}
</script>

<!-- HTML -->
<div id="chartdiv"></div>			




